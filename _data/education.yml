- name: "Unpacked: Full-Stack GraphQL with Absinthe, Phoenix, and React"
  link: https://pragmaticstudio.com/courses/unpacked-full-stack-graphql-with-absinthe-phoenix-react
  dates: July 2020
  qualification: Online Video Course
  description: |
    Building on my knowledge of React.js, Elixir, Phoenix, and GraphQL, this
    course from [The Pragmatic Studio][studio] tied all of this knowledge
    together into an excellent example full stack web application.

    [studio]: https://pragmaticstudio.com/about
  technologies:
    Core Languages:
    - HTML and CSS
    - JavaScript
    - Elixir
    - GraphQL
    Development Tools:
    - Mix (build tool)
    - Hex (package manager)
    - npm
    - webpack
    - Sass (CSS preprocessor)
    Backend Frameworks and Libraries:
    - Phoenix Framework
    - Ecto (ORM)
    - Absinthe
    - dataloader
    Frontend Frameworks and Libraries:
    - React.js
    - Apollo
    - React Router
    - Bootstrap
    Platforms:
    - The Erlang Virtual Machine (BEAM)
    - Open Telecom Platform (OTP)
    - PostgreSQL

- name: "Unpacked: Multi-Player Game with Elixir, Phoenix, Vue & Elm"
  link: https://pragmaticstudio.com/unpacked-multi-player-bingo-with-elixir-phoenix-vue-elm
  dates: July 2020
  qualification: Online Video Course
  description: |
    As the name suggests, this video course by [The Pragmatic Studio][studio]
    walks through a full stack web application with Elixir and Phoenix on the
    backend and Vue.js or Elm on the frontend.

    [studio]: https://pragmaticstudio.com/about
  technologies:
    Core Languages:
    - HTML and CSS
    - JavaScript
    - Elixir
    Development Tools:
    - Mix (build tool)
    - Hex (package manager)
    - npm
    - Brunch (build tool)
    Frameworks and Libraries:
    - Phoenix Framework
    - Vue.js
    - Elm
    Platforms:
    - The Erlang Virtual Machine (BEAM)
    - Open Telecom Platform
    - Node.js

- name: Developing with Elixir and OTP
  link: https://pragmaticstudio.com/courses/elixir
  dates: June 2020
  qualification: Online Video Course
  description: |
    This video course from [The Pragmatic Studio][studio] served as an
    excellent introduction to Elixir and Erlang/OTP.

    [studio]: https://pragmaticstudio.com/about
  technologies:
    Technologies:
    - Elixir
    - Mix (build tool)
    - Hex (package manager)
    - ExUnit (test framework)
    - Poison (JSON library)
    - Open Telecom Platform (OTP)
    - Erlang/OTP
    - The Erlang Virtual Machine (BEAM)

- name: Advanced React & GraphQL
  link: https://advancedreact.com
  dates: November 2019
  qualification: Online Video Course
  description: |
    On the heels of my introduction to React.js, I dove into building a full
    stack eCommerce application using Next.js, Apollo, and Prisma, guided once
    again by [Wes Bos](https://wesbos.com/courses).
  technologies:
    Core Languages:
    - HTML and CSS
    - JavaScript
    - GraphQL
    Development Tools:
    - npm
    - Jest (test runner)
    - webpack
    Frameworks and Libraries:
    - React.js
    - Next.js
    - Styled Components
    - Apollo (GraphQL client)
    - React-Apollo
    - Enzyme
    - GraphQL Yoga
    Platforms:
    - Prisma (GraphQL server and cloud host)
    - PostgreSQL
    - Stripe

- name: React for Beginners
  link: https://reactforbeginners.com/
  dates: November 2019
  qualification: Online Video Course
  description: |
    I learned the basics of building React.js applications through this online
    course created by [Wes Bos](https://wesbos.com/courses).
  technologies:
    Technologies:
    - HTML and CSS
    - JavaScript
    - npm
    - React.js
    - create-react-app
    - React Router
    - Firebase
    - Stylus

- name: Neumont College of Computer Science
  link: https://neumont.edu
  dates: October 2012 - March 2015
  qualification: Bachelor of Science in Web Design and Development
  description: |
    My education at Neumont provided key skills and experience ranging from
    hands-on learning with a variety of technologies to team-based projects,
    both on-campus and embedded within real-world companies.

  technologies:
    Core Languages:
    - Java
    - C#
    - HTML and CSS
    - JavaScript
    - Ruby
    - ActionScript

    Methodologies and Design Patterns:
    - OOP (Object-Oriented Programming)
    - ReST (Representational State Transfer)
    - MVC (Model-View-Controller) pattern and Separation of Concerns
    - DI (Dependency Injection) and IoC (Inversion of Control)
    - Agile methodologies (including Scrum)

    Development Tools:
    - Unix-style command line (CLI)
    - Visual Studio 2012
    - Visual Studio 2013
    - Eclipse (Java IDE)
    - IntelliJ and other JetBrains IDEs
    - npm
    - Grunt.js
    - Gulp.js
    - Adobe Flash

    Backend Web Frameworks:
    - ASP.NET MVC 4
    - J2EE (Java 2, Enterprise Edition)
    - TomEE (Tomcat for Java EE)
    - Express.js
    - Ruby on Rails

    Frontend Web Frameworks:
    - Angular.js
    - Ember.js

    Frontend Libraries:
    - jQuery
    - Bootstrap
    - Box2D
    - CreateJS

    Additional Technologies:
    - node.js
    - Microsoft SQL Server
    - MongoDB
    - WinForms
    - WPF (Windows Presentation Foundation)
    - Microsoft XNA
